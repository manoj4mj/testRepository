{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mdatafactories"
		},
		"LSSql_order_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LSSql_order'"
		},
		"demoBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'demoBlobStorage'"
		},
		"msmSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'msmSqlDatabase'"
		},
		"LSKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://msmtestkeyvault.vault.azure.net/"
		},
		"msmDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://msmdatalakegen2.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DemoPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "demo_Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "customerID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customerID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CustomerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customerName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "customerAddress",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customerAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "updateDate",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "msmcustomertxt",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "msmSqlcustomer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "demo_Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sps_customer_finaltable]"
						},
						"linkedServiceName": {
							"referenceName": "msmSqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "manoj"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-25T12:42:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/msmcustomertxt')]",
				"[concat(variables('factoryId'), '/datasets/msmSqlcustomer')]",
				"[concat(variables('factoryId'), '/linkedServices/msmSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "inputcsv",
								"type": "DatasetReference",
								"parameters": {
									"inputfile": "emp.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "outputcsv",
								"type": "DatasetReference",
								"parameters": {
									"outputfile": "emp.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-09-22T21:53:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/inputcsv')]",
				"[concat(variables('factoryId'), '/datasets/outputcsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Retrieve data from raw table to target table and store the data. ",
				"activities": [
					{
						"name": "OldwaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select watermarkedvalue from watermarkedtable\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ds_raw_order",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "newWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(insertDateTime)\n as\n  newWatermarkedvalue from final_order",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_sink_order",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "OldwaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "newWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select* from raw_order where insertDateTime>'@{activity('OldwaterMark').output.firstRow.watermarkedvalue}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Ds_raw_order",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_sink_order",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[updatewatermarktable]"
						},
						"linkedServiceName": {
							"referenceName": "msmSqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "watermark"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-26T10:24:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ds_raw_order')]",
				"[concat(variables('factoryId'), '/datasets/DS_sink_order')]",
				"[concat(variables('factoryId'), '/linkedServices/msmSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_sink_order')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msmSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dataset for source to sink"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "orderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "prodID",
						"type": "varchar"
					},
					{
						"name": "customerID",
						"type": "varchar"
					},
					{
						"name": "quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "insertDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "final_order"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msmSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_raw_order')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msmSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dataset for source to sink"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "orderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "prodID",
						"type": "varchar"
					},
					{
						"name": "customerID",
						"type": "varchar"
					},
					{
						"name": "quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "insertDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "raw_order"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msmSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emp_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msmDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "emp.xlsx",
						"fileSystem": "msmoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msmDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emp_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msmDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "demoinput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msmDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inputcsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demoBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"inputfile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().inputfile",
							"type": "Expression"
						},
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demoBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/msmSqlcustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msmSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "manoj",
					"table": "stg_customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msmSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/msmcustomertxt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msmDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customer.txt",
						"fileSystem": "demoinput"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msmDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputcsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demoBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"outputfile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().outputfile",
							"type": "Expression"
						},
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demoBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/watermaksqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "msmSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dataset for source to sink"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tableName",
						"type": "varchar"
					},
					{
						"name": "watermarkedvalue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarkedtable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/msmSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LSKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LSKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LSSql_order')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LSSql_order_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demoBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('demoBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/msmDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('msmDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LSKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "msmAKsecret"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/msmSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('msmSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demotrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 2,
						"startTime": "2021-09-22T21:55:00Z",
						"endTime": "2021-09-23T21:55:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline')]"
			]
		}
	]
}